# Encryption/signing command. The command has to support reading plaintext
# from STDIN.
#
# It is recommended, for security, that the command also signs the database
# to ensure we are not dealing with a fake, e.g.
#   $ gpg --yes -se -r <key id> -o <db> -
#
# It's also better to use a command that can write to a temporary file to make
# sure encryption succeeded before starting to overwrite the intended final
# destination (ideally with an atomic operation such as rename(2)).
#
# If using GnuPG, not that you may need to set the GPG_TTY environment
# variable if running from a terminal.
#
encrypt_cmd: /home/plalonde/prog/ckrts/ckrts_backend_gpg.sh encrypt

# Decryption command. The command must write the decrypted output to STDOUT.
# It is recommended that the decryption command also verifies signatures on
# the database to ensure we are not dealing with a fake.
decrypt_cmd: /home/plalonde/prog/ckrts/ckrts_backend_gpg.sh decrypt

# After a successful database save (and only once per session), we perform
# a backup using the following command.
backup_cmd: /bin/cp /home/plalonde/prog/ckrts/ckrts.json.sample.gpg /home/plalonde/prog/ckrts/ckrts.json.sample.gpg~

# Command to paste secrets to the clipboard. The command has to read the
# secret from STDIN. Ideally, it should not keep the secret forever.
paste_cmd: /usr/bin/xclip -quiet

# After this timeout, the database will be automatically saved and the program
# will exit. This should be set to a value lower than the TTL of any agent
# retaining secret keys, such as gpg-agent.
timeout: 300

# When using the 'xtype' command to have X simulate keystrokes for typing
# the password, use this hotkey to signal ckrts to begin typing.
# The key names can be found in /usr/include/X11/keysymdef.h, or
# https://cgit.freedesktop.org/xorg/proto/x11proto/tree/keysymdef.h,
# without the "XK_" prefix.
xtype_hotkey: F11

# When using the 'xtype' command to have X simulate keystrokes for typing
# the password, use this hotkey to abort typing and return to the command
# prompt.
xtype_esc: Escape

# If set to 'no', the program will not use mlock() to ensure allocated
# memory always remains in RAM. This is insecure if the system isn't
# encrypting its swap memory.
mlock: yes

# The maximum length of fields for the secrets database. Increase it if
# you plan on saving long values, notes, secrets, etc.
max_value_length: 1024

